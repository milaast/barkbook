BARKBOOK

Color: 
    turquoise: 24c3c3
    magenta: e000bb

Data resources: 
    Fake people and pet (cats and dogs) profiles. Used Faker for the people's profiles and Muttville database for the dogs (no API)

MVP: 
    - User profiles: username, real name, a short description, location (city, zipcode), picture, e-mail.
    ### No more description. Only personal information, among other details. 
    ### Still don't have the feature to upload the picture.

    - Pet profiles: Picture, name, weight, age, breed.
    ### Also does not have the option to upload picture yet. 
    ### In both cases (pet and user: figure how to upload and where to store the pictures.)

       DONE: Relationship between User and Pet: One User to many Pets. 

        
    - A button that express interest in the pet and sends the owner a message with the persons email address. 
    ## Made it so the owner can see the interested person's information on the list of people interested in the pet. 
    - Search feature: simple. By weight, by breed, by zipcode or city (NOT RADIUS).
    ## Filter on which animals to see
    - Picture upload: user and pets 
    - testing! - might need some refactoring to make tests better. 

    ******************************************************************

    *** Other notes: ***
    DONE - Session: when the user creates a profile, start a session.
    DONE - Take user to a page to choose if they'd like to create a pet profile or to start searching for pets. (THIS PAGE NEEDS TO BE BUILT, AS WELL AS SEARCH FEATURE)
    DONE - If user chooses to create a pet profile, use the user_id from the session that was started when they created the account. 
    DONE - Implement a link on the user's profile where they can create more pet profiles. *DONE* (STILL NEED TO CREATE THE USER PROFILE TEMPLATE)
    DONE - When the user creates a pet profile, if they mark the pet up for adoption, automatically add that pet to adoptions table. 
    DONE - Logout function after user has logged in/created the account. (function has been created on server file but not implemented.)
    DONE - Implement 'interest button' that should only show in profiles of pets that are currently in adoption table
    KIND OF DONE - Implement search feature 

    *******************************************************************

Possible API's: 
    - Facebook to log-in and sharing (not MVP).
    - Twitter to share (not MVP).
    - Google Maps for location. 

Future features: 
    - Google Location API (after MVP)
    - Messaging (NOT instant)

    DONE: 
Things to research: 
    DONE - The interest button. Sends a POST request to server. Separate data model. 
    Profile requesting info. ID of pet profile that they express interest in. 
    "Give me records where someone asked about a pet that I own"

    ALL DONE: 
    Each table will have unique IDs. 
    User table
    Pet table
    User + Pet table that relates both other tables (user id and pet id to estabilish relation between the two - join table). 
    Pet interest table: Also auto generated ID, user ID (requester), pet ID, user owner ID. Shows owner who is interested in their pet and interested person the pets they are interested in. 

    ID's - Primary key! Auto generated (in all four tables)



Denormalization: makes easier to look things up. 
